//
//  B O O T S T R A P
//  v 4.3.x
//
//  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
//
//  The MIT License (MIT)
//  Copyright (c) 2011-2019 Twitter, Inc.
//  Copyright (c) 2011-2019 The Bootstrap Authors
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.

.#{$prefix}container {
  @include make-container();
  @include make-container-max-widths();

  &-fluid {
    @include make-container();
  }
}

.#{$prefix}row {
  @include make-row();
}

// Remove the negative margin from default .row, then the horizontal padding
// from all immediate children columns (to prevent runaway style inheritance).
.#{$prefix}no-gutters {
  margin-right: 0;
  margin-left: 0;

  > .#{$prefix}col,
  > [class*="#{$prefix}col-"] {
    padding-right: 0;
    padding-left: 0;
  }
}

$columns: $grid-columns;
$gutter: $grid-gutter-width;
$breakpoints: $grid-breakpoints;

// Common properties for all breakpoints
%grid-column {
  position: relative;
  width: 100%;
  padding-right: $gutter / 2;
  padding-left: $gutter / 2;
}

@each $breakpoint in map-keys($breakpoints) {
  $infix: breakpoint-infix($breakpoint, $breakpoints);

  // Allow columns to stretch full width below their breakpoints
  @for $i from 1 through $columns {
    .#{$prefix}col#{$infix}-#{$i} {
      @extend %grid-column;
    }
  }

  .#{$prefix}col#{$infix},
  .#{$prefix}col#{$infix}-auto {
    @extend %grid-column;
  }

  @include media-breakpoint-up($breakpoint, $breakpoints) {
    // Provide basic `.col-{bp}` classes for equal-width flexbox columns
    .#{$prefix}col#{$infix} {
      flex-basis: 0;
      flex-grow: 1;
      max-width: 100%;
    }

    .#{$prefix}col#{$infix}-auto {
      flex: 0 0 auto;
      width: auto;
      max-width: 100%; // Reset earlier grid tiers
    }

    @for $i from 1 through $columns {
      .#{$prefix}col#{$infix}-#{$i} {
        @include make-col($i, $columns);
      }
    }

    .#{$prefix}order#{$infix}-first { order: -1; }

    .#{$prefix}order#{$infix}-last { order: $columns + 1; }

    @for $i from 0 through $columns {
      .#{$prefix}order#{$infix}-#{$i} { order: $i; }
    }

    // `$columns - 1` because offsetting by the width of an entire row isn't possible
    @for $i from 0 through ($columns - 1) {
      @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
        .#{$prefix}offset#{$infix}-#{$i} {
          @include make-col-offset($i, $columns);
        }
      }
    }
  }
}
